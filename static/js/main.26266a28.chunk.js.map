{"version":3,"sources":["BlogList.js","useFetch.js","Home.js","Navbar.js","Create.js","BlogDetails.js","NotFound.js","images/siteImage.png","About.js","App.js","index.js"],"names":["BlogList","blogs","title","className","map","blog","to","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Navbar","style","color","backgroundColor","borderRadius","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","About","src","siteImage","alt","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26266a28.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({blogs, title}) => {\r\n\r\n\r\n  return ( \r\n    <div className=\"blog-list\">\r\n      \r\n      <h2>{title}</h2>\r\n      {blogs.map((blog) => (\r\n    <div className=\"blog-preview\" key={blog.id}>\r\n      <Link to={`/blogs/${blog.id}`}>\r\n         <h2>{blog.title}</h2>\r\n        <p>Written By: {blog.author}</p>\r\n      </Link>\r\n    </div>\r\n  ))}\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default BlogList;","import { useState, useEffect } from \"react\";\r\n\r\n\r\n//custom hook\r\nconst useFetch = (url) => {\r\n\r\n\r\n  //data sets to fetch json files\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null)\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n    //stop making unmounted component requests to browser\r\n    const abortCont = new AbortController();\r\n\r\n    setTimeout(() => {\r\n      fetch(url, {signal: abortCont.signal })\r\n    .then(res => {\r\n      if(!res.ok){\r\n        throw Error('could not fetch data');\r\n      }\r\n      return res.json();\r\n    })\r\n    .then(data =>{\r\n      setData(data)\r\n      setIsPending(false);\r\n      setError(null)\r\n    })\r\n    .catch(err => {\r\n      //logic to stop refreshing states setIsPending\r\n      if(err.name === 'AbortError'){\r\n        console.log('fetch aborted')\r\n      } else {\r\n        setIsPending(false)\r\n        setError(err.message)\r\n      }      \r\n    })\r\n    }, 1000);\r\n\r\n    //return in order for browser to load and also fires this function\r\n    //abort() is a javascript function\r\n    return () => abortCont.abort();\r\n\r\n  }, [url]);\r\n\r\n  //this is for the custom hooks \r\n  //we need to return the used hooks to the homepage as an object\r\n  return { data, isPending, error }\r\n\r\n}\r\n\r\nexport default useFetch\r\n\r\n","import BlogList from \"./BlogList\";\r\nimport useFetch from './useFetch';\r\n\r\nconst Home = () => {\r\n  const { data: blogs, isPending, error } = useFetch( `http://localhost:8000/blogs`)\r\n \r\n  \r\n\r\n  return ( \r\n<div className=\"home\">\r\n  {error && <div>{error}</div>}\r\n  {isPending && <div> Loading.....</div>}\r\n  {blogs && <BlogList blogs={blogs} title=\"All the Blogs!\" />}\r\n</div>\r\n   );\r\n}\r\n \r\nexport default Home;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return ( \r\n    <div className=\"navbar\">\r\n      <h1>Simple Blog</h1>\r\n      <div className=\"links\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/about\">Content</Link>\r\n        <Link \r\n        to=\"/create\" \r\n        style={{ \r\n          color: 'white', \r\n          backgroundColor: '#4267B2',\r\n          borderRadius: '8px' \r\n        }}>\r\n          Create new</Link>\r\n        \r\n      </div>\r\n      \r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Navbar;","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Create = () => {\r\n\r\n  //react hooks useState interacts with the forms and acrquires the field\r\n  //Takes the input as a string from the set state which was an empty string\r\n  //create an event function inside onChange and target the value inside the form\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [author, setAuthor] = useState('Megumi');\r\n  const [isPending, setIsPending] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const blog = {title, body, author};\r\n    \r\n    setIsPending(true);\r\n\r\n    fetch(`http://localhost:8000/blogs`, {\r\n      method: 'POST',\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(blog)\r\n    }).then(()=>{\r\n      console.log('new blog added');\r\n      setIsPending(false)\r\n      history.push('/');\r\n    })\r\n  }\r\n\r\n  return ( \r\n    <div className=\"create\">\r\n      <h2>Add new blog</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Blog title:</label>\r\n        <input \r\n        type=\"text\" \r\n        required\r\n\r\n        // this is how we access the input forms\r\n        value = { title }\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <label>Blog body:</label>\r\n        <textarea\r\n        required\r\n        value = {body}\r\n        onChange={(e) => setBody(e.target.value)}\r\n        ></textarea>\r\n        <label>Blog author:</label>\r\n        <select\r\n        value = { author }\r\n        onChange={(e) => setAuthor(e.target.value)}\r\n        >\r\n          <option value=\"Megumi\">Megumi</option>\r\n          <option value=\"Mitsuri\">Mitsuri</option>\r\n        </select>\r\n        {!isPending && <button>Add Blog</button>}\r\n        {isPending && <button disabled>Blog deployed....</button>}\r\n      </form>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Create;","import { useParams } from 'react-router-dom';\r\nimport useFetch from './useFetch';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst BlogDetails = () => {\r\n\r\n  const{ id } = useParams();\r\n  const { data: blog, isPending, error } = useFetch(`http://localhost:8000/blogs/` + id);\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    fetch(`http://localhost:8000/blogs/` + blog.id, {\r\n      method: 'DELETE'\r\n    }).then(() => {\r\n      history.push('/');\r\n    })\r\n  }\r\n\r\n  return ( \r\n    <div className=\"blog-details\">\r\n      {/* //whenever data takes a while */}\r\n        { isPending && <div>Loading...</div>}\r\n      {/* whenever server catches an error */}\r\n        {error && <div>{ error }</div>}\r\n\r\n      {blog && (\r\n        <article>\r\n          <h2>{ blog.title }</h2>\r\n          <p>Written by: { blog.author }</p>\r\n            <div>\r\n              {blog.body}\r\n            </div>\r\n            <button onClick={handleClick}>Delete Blog</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return ( \r\n    <div className=\"not-found\">\r\n      <h2>Error 404</h2>\r\n      <p>page not found go back home</p>\r\n      <Link to='/'>homepage...</Link>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default NotFound;","export default __webpack_public_path__ + \"static/media/siteImage.86ad9221.png\";","import siteImage from './images/siteImage.png';\r\n\r\nconst About = () => {\r\n  return ( \r\n    <div className=\"about\">\r\n      <h2>Content</h2>\r\n        <article>A web app that is made from React that shows the simple use of React hooks, Custom hooks,\r\n          JSON-server, Communicating with API's, Routing, Javascript logics added. In the meantime this does not work beacuse in this site I used\r\n          a JSON-server which acts as an API for me to handle requests such as fetch, post, delete.....\r\n          Don't worry about the Loading on the blogs page\r\n          its an added logic to see that if the server takes too long a Loading text appears, it is set to prolong \r\n          to see the effect. To see what is looks like its just below.</article>\r\n          <p>Andre Gonzales</p>\r\n          <img src={siteImage} alt=\"site-image\" />\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default About;","import Home from './Home';\nimport Navbar from './Navbar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\nimport About from './About';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar/>\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Home/>\n              </Route>\n              <Route path=\"/about\">\n                <About/>\n              </Route>\n              <Route path=\"/create\">\n                <Create/>\n              </Route>\n              <Route path=\"/blogs/:id\">\n                <BlogDetails/>\n              </Route>\n              <Route path=\"*\">\n                <NotFound/>\n              </Route>\n            </Switch>\n          </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}